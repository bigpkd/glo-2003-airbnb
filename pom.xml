<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ca.ulaval.glo2003</groupId>
    <artifactId>project-eq08</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <!-- Make build platform independent -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- general -->
        <java.version>1.8</java.version>
        <maven-compiler.version>3.8.1</maven-compiler.version>
        <exec-maven.version>1.6.0</exec-maven.version>
        <main-class>ca.ulaval.glo2003.Main</main-class>
        <!-- injection -->
        <guice.version>4.2.3</guice.version>
        <guice-multibindings.version>4.2.3</guice-multibindings.version>
        <!-- rest -->
        <spark-core.version>2.9.1</spark-core.version>
        <jackson-databind.version>2.10.1</jackson-databind.version>
        <!-- test -->
        <junit-jupiter.version>5.6.2</junit-jupiter.version>
        <maven-surefire.version>2.22.2</maven-surefire.version>
        <mockito-junit-jupiter.version>3.3.3</mockito-junit-jupiter.version>
        <javafaker.version>1.0.2</javafaker.version>
        <!-- code coverage -->
        <jacoco-maven.version>0.8.5</jacoco-maven.version>
        <!-- logging -->
        <slf4j-simple.version>1.7.30</slf4j-simple.version>
        <!-- style -->
        <maven-git-code-format.version>1.39</maven-git-code-format.version>
        <!-- deployment -->
        <jar-file-name>project-eq08</jar-file-name>
        <heroku-maven.version>3.0.2</heroku-maven.version>
        <heroku-maven.appName>glo2003-h2020-eq08</heroku-maven.appName>
        <maven-shade.version>3.2.3</maven-shade.version>
        <maven-jar.version>3.2.0</maven-jar.version>
    </properties>

    <dependencies>
        <!-- injection -->
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>${guice.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-multibindings</artifactId>
            <version>${guice-multibindings.version}</version>
        </dependency>
        <!-- rest -->
        <dependency>
            <groupId>com.sparkjava</groupId>
            <artifactId>spark-core</artifactId>
            <version>${spark-core.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson-databind.version}</version>
        </dependency>
        <!-- test -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito-junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.javafaker</groupId>
            <artifactId>javafaker</artifactId>
            <version>${javafaker.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j-simple.version}</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>${jar-file-name}</finalName>
        <plugins>
            <!-- general -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${exec-maven.version}</version>
                <configuration>
                    <mainClass>${main-class}</mainClass>
                </configuration>
            </plugin>
            <!-- test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire.version}</version>
            </plugin>
            <!-- code coverage -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>generate-code-coverage-report</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- style -->
            <plugin>
                <groupId>com.cosium.code</groupId>
                <artifactId>maven-git-code-format</artifactId>
                <version>${maven-git-code-format.version}</version>
                <executions>
                    <!-- On commit, format the modified java files -->
                    <execution>
                        <id>install-formatter-hook</id>
                        <goals>
                            <goal>install-hooks</goal>
                        </goals>
                    </execution>
                    <!-- On Maven verify phase, fail if any file
                    (including unmodified) is badly formatted -->
                    <execution>
                        <id>validate-code-format</id>
                        <goals>
                            <goal>validate-code-format</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- deployment -->
            <plugin>
                <groupId>com.heroku.sdk</groupId>
                <artifactId>heroku-maven-plugin</artifactId>
                <version>${heroku-maven.version}</version>
                <configuration>
                    <appName>${heroku-maven.appName}</appName>
                    <includeTarget>false</includeTarget>
                    <includes>
                        <include>target/${jar-file-name}.jar</include>
                    </includes>
                    <processTypes>
                        <web>java -Dport=$PORT -jar target/${jar-file-name}.jar</web>
                    </processTypes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${maven-shade.version}</version>
                <configuration>
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>module-info.class</exclude>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                            </excludes>
                        </filter>
                    </filters>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <createDependencyReducedPom>
                                false
                            </createDependencyReducedPom>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>${main-class}</mainClass>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- avoid third parties dependencies duplication
                    warnings -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar.version}</version>
                <configuration>
                    <forceCreation>true</forceCreation>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <!-- code coverage -->
            <!-- select non-aggregate reports -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

</project>
